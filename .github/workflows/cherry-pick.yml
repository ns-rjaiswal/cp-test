name: Cherry-pick to release branches
on:
  pull_request:
    branches:
      - rjtest1
      - rjtest2
      - rjtest3
      - rjtest4
    types: ["closed"]
jobs:
  cherry_pick:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        label:
          - rjtest1
          - rjtest2
          - rjtest3
          - rjtest4
    name: Cherry pick into ${{ matrix.label }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get short SHA
        run: |
          echo "SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV
      - name: Cherry pick into ${{ matrix.label }}
        if: contains(github.event.pull_request.labels.*.name, matrix.label) && github.event.pull_request.merged == true && contains(github.event.pull_request.title, 'cherry-pick-bot') == false
        uses: infiotinc/github-cherry-pick-action@v1.0.1
        with:
          #token: ${{ secrets.GITHUB_TOKEN }}
          cherry-pick-branch: cherry-pick-${{ env.SHORT_SHA }}-${{ matrix.label }}
          inherit_labels: false
          branch: ${{ matrix.label }}
          title: "[cherry-pick-bot] {old_title}"
          body: "Cherry picking #${{ github.event.pull_request.number }} / ${{ github.event.pull_request.merge_commit_sha }} onto ${{ matrix.label }} branch"
      - name: split username
        if: always()
        env:
          USERNAME: venkyfff
          USERNAMES_MAPPING: ${{ vars.USERNAMES_MAPPING }}
          #USERNAME: ${{ github.event.pull_request.user.login }}    
        id: split
        run: |
          set -x
          if [[ "$USERNAME" =~ ^ns-.* ]] ; then
            echo "NS_USERNAME=${USERNAME##*-}@netskope.com" >> "$GITHUB_OUTPUT"
          elif [[ "$USERNAME" =~ \fff$ ]] ; then
            email=`echo $USERNAMES_MAPPING | grep $USERNAME | cut -d "," -f2`
            echo "NS_USERNAME=$email" >> "$GITHUB_OUTPUT"
          fi
      - name: print
        if: always()
        env:
          USERNAME: ${{ steps.split.outputs.NS_USERNAME }}
        run: |
          echo "username: $USERNAME"
      # - name: Create JIRA
      #   id: jira
      #   if: ${{ failure() }}
      #   uses: tomhjp/gh-action-jira-create@v0.2.1
      #   with:
      #     project: BWAN
      #     issuetype: "Task"
      #     summary: "Cherry-pick of #${{ github.event.pull_request.number }} (${{ github.event.pull_request.title }}) into ${{ matrix.label }} : ${{ job.status }}"
      #     description: "Cherry-pick of #${{ github.event.pull_request.number }} (${{ github.event.pull_request.title }}) into ${{ matrix.label }} : ${{ job.status }}\n${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}\nCreated issue ${{ steps.create.outputs.issue }}\nDeveloper - ${{ github.event.pull_request.user.login }}\nPR - ${{ github.event.pull_request.html_url }}\n\nCreated from GitHub Action"
      #     extraFields: '{"assignee": "${{ github.event.pull_request.user.login }}", "priority": { "name": "Blocker"}, "components": [ { "name": "BWAN_OPS" } ]}'
      #   env:
      #     JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
      #     JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
      #     JIRA_API_TOKEN: ${{ secrets.JIRA_USER_API_TOKEN }}
      # - name: Notify Slack
      #   if: ${{ failure() }}
      #   uses: slackapi/slack-github-action@v1.23.0
      #   with:
      #     channel-id: "vt-bwan-mgmt-private"
      #     slack-message: "Cherry-pick of #${{ github.event.pull_request.number }} into ${{ matrix.label }} : ${{ job.status }}\n${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}\nCreated issue ${{ steps.create.outputs.issue }}"
      #   env:
      #     SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
